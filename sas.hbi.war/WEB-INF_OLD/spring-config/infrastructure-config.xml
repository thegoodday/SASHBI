<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:sas-container="http://www.sas.com/xml/schema/container"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.sas.com/xml/schema/container
        http://www.sas.com/xml/schema/container/sas-container.xsd">

    <sas-container:datasource id="datasource" jndi-name="jdbc/SASAPP" />
    <bean id="environmentProperties"
        class="com.sas.framework.services.config.dao.PropertySetFactoryBean">
        <property name="dataSource" ref="datasource"/>
    </bean>

    <!--  this bean *MUST* bean named applicationEventMulticaster for Spring to pick it up and use it -->
    <bean id="applicationEventMulticaster"
        class="org.springframework.context.event.SimpleApplicationEventMulticaster">
        <property name="taskExecutor">
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
                <property name="maxPoolSize" value="5" />
            </bean>
        </property>
    </bean>

    <bean class="com.sas.svcs.springframework.config.DefaultProvidedPropertyPlaceholderConfigurer">
        <property name="placeholderPrefix" value="@{"/>
        <property name="placeholderSuffix" value="}"/>
        <property name="properties" ref="environmentProperties" />
    </bean>

    <bean id="localJpsProperties" 
        class="org.springframework.beans.factory.config.PropertiesFactoryBean">
        <property name="properties" ref="environmentProperties" />
    </bean>
    <import resource="classpath:META-INF/local-jps.xml" />

    <bean class="com.sas.svcs.authentication.helper.UserSessionFactory" />
    <bean class="com.sas.svcs.authentication.helper.TrustedUserFactory">
        <constructor-arg index="0" ref="localUserService" />
    </bean>

    <bean id="passwordRecoveryUtil" class="com.sas.svcs.authentication.helper.PasswordRecoveryUtil" />

    <bean id="localSecuredUser"
          class="com.sas.svcs.authentication.helper.UserContextFactoryBean">
        <property name="userid" value="@{secure.userid}"/>
        <property name="password" value="@{secure.password}"/>
        <property name="domain" value="@{metadata.domain}"/>
        <property name="userService" ref="localUserService"/>
    </bean>

    <!-- Following two beans are needed to set secured credentials in Report Repository -->
    <!-- This ensures that non-admin user access to Report Repository is local and not through web service -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.sas.report.repository.OMRID.setInformationService"/>
        <property name="arguments">
            <list>
                <ref bean="localInformationService"/>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="com.sas.report.repository.OMRID.setSecuredUser"/>
        <property name="arguments">
            <list>
                <ref bean="localSecuredUser"/>
            </list>
        </property>
    </bean>

</beans>
